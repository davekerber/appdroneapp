br

.row
  .span2
    h3 Stats
    .well
      - gemspec = Gem.loaded_specs['app_drone']
      strong = gemspec.name
      | &mdash;
      = gemspec.version

  .span5
    h1 Drones
    br
    nav.category_filter.nav.nav-tabs

      - (AppDrone::Drone.categories + [:all]).sort.each do |category|
        li class=('active' if category == :all)
          a href='#' data-category=category = category
    javascript:
      $(function() {

        // filter by categories
        $('nav.category_filter a').click(function() {
          var category = $(this).data('category');

          // toggle the active classes
          $('li',$(this).closest('nav')).removeClass('active');
          $(this).parent('li').addClass('active');

          // hide all drones
          $('section.drone').hide();

          // show only those that match the category
          if(category == 'all') { $('section.drone').show(); }
          $('section.drone[data-category="' + category + '"]').show();

          return false;
        });

        // toggle on-off
        $('.drone button.toggle').click(function() {
          var active = $(this).hasClass('active');
          var icon = $('i',this);
          console.log(active);
          console.log(icon);
          if(active) {
            $(this).removeClass('active btn-primary');
            icon.removeClass('icon-heart').addClass('icon-heart-empty');
          } else {
            $(this).addClass('active btn-primary');
            icon.removeClass('icon-heart-empty').addClass('icon-heart');
          }
        });
      });

    - drones = AppDrone::Drone.drones.map(&:to_app_drone_class).sort_by { |d| d.category.to_s + d.human_name }
    - drones = drones.sort_by { |d| d.category }
    - drones = AppDrone::DependencyChain.sort(drones)
    - drones.each do |drone|
      = render partial: 'pages/drone', locals: { drone: drone }

  .span3
    h4 Hello :)
